name: Deployment

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Create .env file
        working-directory: .
        run: |
          echo "${{ secrets.ENV_FILE }}" >> ./.env
          echo "${{ secrets.PROD_ENV_FILE }}" >> ./.env.prod
      - name: Build the Docker compose services
        run: |
          POSTGRES_USER=${{ secrets.POSTGRES_USER }} POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }} docker-compose build
      - name: Docker compose up
        run: |
          POSTGRES_USER=${{ secrets.POSTGRES_USER }} POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }} docker-compose up -d
      - name: Wait for the services to be ready
        run: |
          sleep 10
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18.17
      - name: Install Dependencies
        run: yarn install
      - name: Prisma Schema Push
        run: |
          yarn push
      - name: Health Check
        run: |
          curl -s http://localhost:4000/health || exit 1
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to aws ec2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ./electricity-api
            git pull
            sudo docker compose down api
            sudo docker compose build api
            sudo docker compose up -d api
      - name: wait for the services to be ready
        run: |
          sleep 10
      - name: Health Check
        run: |
          curl -s http://${{ secrets.SSH_HOST }}:4000/health || exit 1